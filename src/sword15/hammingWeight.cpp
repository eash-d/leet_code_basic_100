# include <iostream>

// 编写一个函数，
// 输入是一个无符号整数（以二进制串的形式），
// 返回其二进制表达式中数字位数为 '1' 的个数（也被称为 汉明重量).）。

// 输入：n = 11 (控制台输入 00000000000000000000000000001011)
// 输出：3
// 解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。

// 输入：n = 4294967293 (控制台输入 11111111111111111111111111111101，部分语言中 n = -3）
// 输出：31
// 解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。


class Solution {
public:
    int hammingWeight(uint32_t n) {
        int s = 0;
        int count = 0;
        while (n)
        {
            if (n&1)    ++count;
            n >>= 1;
        }
        return count;
    }
};


int main()
{
    int ans;
    uint32_t n = 00000000000000000000000000001011;
    Solution s;
    ans = s.hammingWeight(n);
    std::cout << ans << std::endl;
    std::cin.get();
}